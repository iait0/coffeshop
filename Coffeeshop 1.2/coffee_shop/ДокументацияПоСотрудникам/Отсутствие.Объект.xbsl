импорт Основное


@Обработчик
метод ПередЗаписью(До: Отсутствие.Данные, ПараметрыЗаписи: Отсутствие.ПараметрыЗаписи)
    если не ЭтоНовый() и ПометкаУдаления и До.Проведен
        выбросить новый ИсключениеНедопустимоеСостояние(
                "Нельзя удалить проведенный документ. Сначала отмените проведение.")
    ;
    
    выбор ПараметрыЗаписи.РежимЗаписи
    когда Проведен
        если Дата < Дата.Сейчас()
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата документа не может быть раньше текущей.")
        ;
        если Сотрудник.ЗагрузитьОбъект().Уволен
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Этот сотрудник уволен.")
        ;
        если ДатаНачала > ДатаОкончания
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата начала отсутствия не может быть позже даты окончания.")
        ;
        если ДатаНачала < Дата.Сейчас() и ПричинаОтсутствия != ПричинаОтсутствия.Болезнь
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата начала отсутствия не может быть раньше текущей даты.")
        ;       
        если ПометкаУдаления
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Помеченный на удаление документ не может быть проведен.")
        ;
    Проведен = Истина
    
    когда ОтменаПроведения
        Проведен = Ложь

    
    когда Неопределено
        если ПометкаУдаления
            Проведен = Ложь
        ;
    ;
;

@Обработчик
метод ПослеЗаписи(До: Отсутствие.Данные, ПараметрыЗаписи: Отсутствие.ПараметрыЗаписи)
    если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.Проведен или (ПараметрыЗаписи.РежимЗаписи
            == РежимЗаписиДокумента.Запись и Проведен)
        ВыполнитьПроведение()

    иначе если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.ОтменаПроведения или ПометкаУдаления != До
            .ПометкаУдаления и ПометкаУдаления
        ОтменитьПроведение()
    ;
;

метод ВыполнитьПроведение()
    если ДатаНачала <= Дата.Сейчас()
        пер ТекущийСотрудник = Сотрудник.ЗагрузитьОбъект()
        ТекущийСотрудник.Отсутствует = Истина
        ТекущийСотрудник.Записать()
        если ТекущийСотрудник.Должность.Представление() == "Бариста"
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
        иначе
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
        ;
    ;
;

метод ОтменитьПроведение()
    пер ТекущийСотрудник = Сотрудник.ЗагрузитьОбъект()
    если ТекущийСотрудник.Отсутствует
        ТекущийСотрудник.Отсутствует = Ложь
        ТекущийСотрудник.Записать()
        если ТекущийСотрудник.Должность.Представление() == "Бариста"
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Ложь)
        иначе
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Ложь)
        ;
    ;
;