импорт Справочники
импорт Основное

@Обработчик
метод ПередЗаписью(До: Увольнение.Данные, ПараметрыЗаписи: Увольнение.ПараметрыЗаписи)
    если не ЭтоНовый() и ПометкаУдаления и До.Проведен
        выбросить новый ИсключениеНедопустимоеСостояние(
                "Нельзя удалить проведенный документ. Сначала отмените проведение.")
    ;
    
    выбор ПараметрыЗаписи.РежимЗаписи
    когда Проведен
        если Дата < Дата.Сейчас()
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата документа не может быть раньше текущей.")
        ; 
        если ДатаУвольнения < Дата
            выбросить новый ИсключениеНедопустимоеСостояние(
            "Дата увольнения не может быть раньше даты документа.")
        ;
        если ФИО.ЗагрузитьОбъект().Уволен
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Этот сотрудник уже уволен.")
        ;
        если ДатаУвольнения < Дата.Сейчас()
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата увольнения не может быть раньше, чем сегодня.")
        ;
        если ПометкаУдаления
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Помеченный на удаление документ не может быть проведен.")
        ;
        Проведен = Истина

    когда ОтменаПроведения
        Проведен = Ложь

    когда Неопределено
        если ПометкаУдаления
            Проведен = Ложь
        ;
    ;
;

@Обработчик
метод ПослеЗаписи(До: Увольнение.Данные, ПараметрыЗаписи: Увольнение.ПараметрыЗаписи)
    если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.Проведен или (ПараметрыЗаписи.РежимЗаписи
            == РежимЗаписиДокумента.Запись и Проведен)
        ВыполнитьПроведение()

    иначе если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.ОтменаПроведения или ПометкаУдаления != До
            .ПометкаУдаления и ПометкаУдаления
        ОтменитьПроведение()
    ;
;

метод ВыполнитьПроведение()
    пер ТекущийСотрудник = ФИО.ЗагрузитьОбъект()
    ТекущийСотрудник.ДокументОбУвольнении = Ссылка
    ТекущийСотрудник.Записать()
    если ДатаУвольнения == Дата.Сейчас()
        ВыполнитьУвольнение(Сотрудники)
    ;
;

метод ВыполнитьУвольнение(Сотрудники: Объект)
    пер ТекущийСотрудник = ФИО.ЗагрузитьОбъект()
    ТекущийСотрудник.Уволен = Истина
    ТекущийСотрудник.Отсутствует = Ложь
    ТекущийСотрудник.Записать()
    пер КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
    для i = 0 по КофейняОбъект.Сотрудники.Граница()
        пер Сотрудник = КофейняОбъект.Сотрудники.Получить(i)        
        если Сотрудник.Сотрудник == ТекущийСотрудник.Ссылка
            КофейняОбъект.Сотрудники.УдалитьПоИндексу(i)
            КофейняОбъект.Записать()
            прервать
        ;
    ;
    если ТекущийСотрудник.Должность.Представление() == "Бариста"
        пер ИдПользователя = ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
        Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)    
    иначе
        пер ИдПользователя =
            ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
        Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
    ;
;

метод ОтменитьПроведение()
    пер ТекущийСотрудник = ФИО.ЗагрузитьОбъект()
    ТекущийСотрудник.Уволен = Ложь
    ТекущийСотрудник.Записать()
    пер КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
    пер НоваяСтрока = КофейняОбъект.Сотрудники.ДобавитьНовый()
    НоваяСтрока.Сотрудник = ТекущийСотрудник.Ссылка
    КофейняОбъект.Записать()
    если ДатаУвольнения == Дата.Сейчас()
        если ТекущийСотрудник.Должность.Представление() == "Бариста"
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Ложь)
        иначе
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Ложь)
        ;
    ;
;