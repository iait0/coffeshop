импорт Основное


@Обработчик
метод ПередЗаписью(До: КадровоеПеремещение.Данные, ПараметрыЗаписи: КадровоеПеремещение.ПараметрыЗаписи)
    если не ЭтоНовый() и ПометкаУдаления и До.Проведен
        выбросить новый ИсключениеНедопустимоеСостояние(
                "Нельзя удалить проведенный документ. Сначала отмените проведение.")
    ;

    выбор ПараметрыЗаписи.РежимЗаписи
    когда Проведен
        если Дата < Дата.Сейчас()
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата документа не может быть раньше текущей.")
        ;
        если ДатаПеревода < Дата.Сейчас()
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Дата перевода не может быть раньше текущей.")
        ;
        если Сотрудник.ЗагрузитьОбъект().Уволен
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Выбранный сотрудник уволен.")
        ;
        если ПометкаУдаления
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Помеченный на удаление документ не может быть проведен.")
        ;
        Проведен = Истина

    когда ОтменаПроведения
        Проведен = Ложь
    
    когда Неопределено
        если ПометкаУдаления
            Проведен = Ложь
        ;
    ;
;

@Обработчик
метод ПослеЗаписи(До: КадровоеПеремещение.Данные, ПараметрыЗаписи: КадровоеПеремещение.ПараметрыЗаписи)
    если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.Проведен или (ПараметрыЗаписи.РежимЗаписи
            == РежимЗаписиДокумента.Запись и Проведен)
        ВыполнитьПроведение()

    иначе если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.ОтменаПроведения или ПометкаУдаления != До
            .ПометкаУдаления и ПометкаУдаления
        ОтменитьПроведение()
    ;
;

метод ВыполнитьПроведение()
    если ДатаПеревода == Дата.Сейчас()
        пер ТекущийСотрудник = Сотрудник.ЗагрузитьОбъект()
        если ТекущийСотрудник.Должность != Должность
            если Должность.Представление() == "Бариста"
                пер ИдПользователя =
                    ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
                пер Пользователь = Пользователи.Найти(ИдПользователя)
                если Пользователь != Неопределено
                    Пользователи.Отключить(Пользователь)
                    ПользователиСервиса.Удалить(ИдПользователя)
                    попытка
                        пер ОписаниеПользователяСервиса =
                            новый ОписаниеПользователяСервиса(УуидыСписков.Баристы, ТекущийСотрудник.Логин)
                            .СЛогином(ТекущийСотрудник.Логин)
                        ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
                        ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
                        Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса
                            .Ид), "Должность", Должность.ВСтроку())
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                            ТекущийСотрудник.Код)
                    поймать Искл: Исключение
                        выбросить новый ИсключениеНедопустимоеСостояние("Ошибка перемещения сотрудника.")
                    ;
                ;
            иначе
                пер ИдПользователя =
                    ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
                пер Пользователь = Пользователи.Найти(ИдПользователя)
                если Пользователь != Неопределено
                    Пользователи.Отключить(Пользователь)
                    ПользователиСервиса.Удалить(ИдПользователя)
                    попытка
                        пер ОписаниеПользователяСервиса =
                            новый ОписаниеПользователяСервиса(УуидыСписков.Управляющие,
                            ТекущийСотрудник.Логин).СЛогином(ТекущийСотрудник.Логин)
                        ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
                        ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
                        Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(
                            ОписаниеПользователяСервиса.Ид), "Должность", Должность.ВСтроку())
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                            ТекущийСотрудник.Код)
                    поймать Искл: Исключение
                        выбросить новый ИсключениеНедопустимоеСостояние("Ошибка перемещения сотрудника.")
                    ;
                ;
            ;
        ;
        пер НоваяСтрока = ТекущийСотрудник.ИсторияПеремещений.ДобавитьНовый()
        НоваяСтрока.Дата = ДатаПеревода
        НоваяСтрока.Из = ТекущийСотрудник.Владелец
        пер КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
        для i = 0 по КофейняОбъект.Сотрудники.Граница()
            пер СотрудникКофейни = КофейняОбъект.Сотрудники.Получить(i)
            если СотрудникКофейни.Сотрудник == ТекущийСотрудник.Ссылка
                КофейняОбъект.Сотрудники.УдалитьПоИндексу(i)
                КофейняОбъект.Записать()
                прервать
            ;
        ;
        ТекущийСотрудник.Владелец = Кофейня
        КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
        пер НоваяСтрокаКофейни = КофейняОбъект.Сотрудники.ДобавитьНовый()
        НоваяСтрокаКофейни.Сотрудник = ТекущийСотрудник.Ссылка
        КофейняОбъект.Записать()
        НоваяСтрока.В = Кофейня
        НоваяСтрока.ДолжностьРанее = ТекущийСотрудник.Должность
        ТекущийСотрудник.Должность = Должность
        НоваяСтрока.НоваяДолжность = Должность
        НоваяСтрока.Документ = Ссылка
        ТекущийСотрудник.Записать()
    ;
;

метод ОтменитьПроведение()
    пер ЗагруженныйСотрудник = Сотрудник.ЗагрузитьОбъект()
    пер i = ЗагруженныйСотрудник.ИсторияПеремещений.Граница()
    если Ссылка == ЗагруженныйСотрудник.ИсторияПеремещений.Получить(i).Документ
        если ЗагруженныйСотрудник.ИсторияПеремещений.Получить(i).Из != ЗагруженныйСотрудник.ИсторияПеремещений.Получить(
            i).В
            пер КофейняОбъект = ЗагруженныйСотрудник.Владелец.ЗагрузитьОбъект()
            для j = 0 по КофейняОбъект.Сотрудники.Граница()
                пер СотрудникКофейни = КофейняОбъект.Сотрудники.Получить(j)
                если СотрудникКофейни.Сотрудник == ЗагруженныйСотрудник.Ссылка
                    КофейняОбъект.Сотрудники.УдалитьПоИндексу(j)
                    КофейняОбъект.Записать()
                    прервать
                ;
            ;
            ЗагруженныйСотрудник.Владелец = ЗагруженныйСотрудник.ИсторияПеремещений.Получить(i).Из
            КофейняОбъект = ЗагруженныйСотрудник.Владелец.ЗагрузитьОбъект()
            пер НоваяСтрокаКофейни = КофейняОбъект.Сотрудники.ДобавитьНовый()
            НоваяСтрокаКофейни.Сотрудник = ЗагруженныйСотрудник.Ссылка
            КофейняОбъект.Записать()
        ;
        если ЗагруженныйСотрудник.ИсторияПеремещений.Получить(i).ДолжностьРанее != ЗагруженныйСотрудник
            .ИсторияПеремещений.Получить(i).НоваяДолжность
            ЗагруженныйСотрудник.Должность = ЗагруженныйСотрудник.ИсторияПеремещений.Получить(i).ДолжностьРанее
            если ЗагруженныйСотрудник.ИсторияПеремещений.Получить(i).НоваяДолжность.Представление() == "Управляющий"
                пер ИдПользователя =
                    ПользователиСервиса.НайтиПоЛогину(ЗагруженныйСотрудник.Логин, УуидыСписков.Управляющие).Ид
                пер Пользователь = Пользователи.Найти(ИдПользователя)
                если Пользователь != Неопределено
                    Пользователи.Отключить(Пользователь)
                    ПользователиСервиса.Удалить(ИдПользователя)
                    попытка
                        пер ОписаниеПользователяСервиса =
                            новый ОписаниеПользователяСервиса(УуидыСписков.Баристы, ЗагруженныйСотрудник
                                .Логин).СЛогином(ЗагруженныйСотрудник.Логин)
                        ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
                        ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
                        Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(
                            ОписаниеПользователяСервиса.Ид), "Должность", ЗагруженныйСотрудник.Должность.ВСтроку())
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                            ЗагруженныйСотрудник.Код)
                    поймать Искл: Исключение
                        выбросить новый ИсключениеНедопустимоеСостояние("Ошибка перемещения сотрудника.")
                    ;
                ;
            иначе
                пер ИдПользователя =
                    ПользователиСервиса.НайтиПоЛогину(ЗагруженныйСотрудник.Логин, УуидыСписков.Баристы).Ид
                пер Пользователь = Пользователи.Найти(ИдПользователя)
                если Пользователь != Неопределено
                    Пользователи.Отключить(Пользователь)
                    ПользователиСервиса.Удалить(ИдПользователя)
                    попытка
                        пер ОписаниеПользователяСервиса =
                            новый ОписаниеПользователяСервиса(УуидыСписков.Управляющие,
                                ЗагруженныйСотрудник.Логин).СЛогином(ЗагруженныйСотрудник.Логин)
                        ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
                        ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
                        Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(
                            ОписаниеПользователяСервиса.Ид), "Должность", ЗагруженныйСотрудник.Должность.ВСтроку())
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                            ЗагруженныйСотрудник.Код)
                    поймать Искл: Исключение
                        выбросить новый ИсключениеНедопустимоеСостояние("Ошибка перемещения сотрудника.")
                    ;
                ;    
            ;
        ;
        ЗагруженныйСотрудник.ИсторияПеремещений.УдалитьПоИндексу(i)
        ЗагруженныйСотрудник.Записать()
    иначе
        выбросить новый ИсключениеНедопустимоеСостояние("Отменить проведение можно только у последнего документа перемещения.")
    ;
;