@Обработчик
метод ПослеСоздания()
    ЗапланироватьЗадание()
    ПерейтиПоСсылке(ОпределениеПользователя(), Ложь)
;

@НаСервере @ДоступноСКлиента
статический метод ОпределениеПользователя(): Строка
    если Пользователи.ТекущийПользователь.ЗагрузитьОбъект().Администратор
        возврат "https://app-395586.1cmycloud.com/applications/Coffeeshop-dev/main"
    иначе если Пользователи.ТекущийИдПользователя.ИдСписка == УуидыСписков.Аналитики
        возврат "https://app-395586.1cmycloud.com/applications/Coffeeshop-dev/analyst"       
    иначе
        возврат "https://app-395586.1cmycloud.com/applications/Coffeeshop-dev/coffeeshop"
        
    ;
;

@НаСервере @ДоступноСКлиента
статический метод ЗапланироватьЗадание()
    знч ОбновалениеСтатусов = ЗапланированныеЗадания.ПолучитьПоКлючу("ОбновлениеСтатусов")
    если ОбновалениеСтатусов == Неопределено
        знч Задание = ЗапланированныеЗадания.Создать(&ОбновлениеСтатусов.ОбновлениеСтатусов)
        Задание.Настроить(
            Ключ = "ОбновлениеСтатусов",
            ХранениеРезультатов = СтратегияХраненияРезультатовЗаданий.Отсутствует(),
            Расписание = Расписание.Ежедневно(Время{09:00}))
        Задание.Запланировать()
    ;
    знч ОбновлениеПредставлений = ЗапланированныеЗадания.ПолучитьПоКлючу("ОбновлениеПредставлений")
    если ОбновлениеПредставлений == Неопределено
        знч Задание = ЗапланированныеЗадания.Создать(&ПредставленияДокументов.ОбновлениеПредставлений)
        Задание.Настроить(
            Ключ = "ОбновлениеПредставлений",
            ХранениеРезультатов = СтратегияХраненияРезультатовЗаданий.Отсутствует(),
            Расписание = Расписание.Периодическое(5м))
        Задание.Запланировать()
    ;
;