импорт Справочники
импорт ДокументацияПоСотрудникам

@ВПодсистеме
@НаСервере
метод ОбновлениеСтатусов()
    ОбновлениеОтсутствия()
    ОбновлениеУвольнения()
    ОбновлениеПриема()
    ОбновлениеПеремещения()
;

@ВПодсистеме
@НаСервере
метод ОбновлениеОтсутствия()
    знч ТекущаяДата = Дата.Сейчас()
    знч ЗапросНачало = Запрос{
        ВЫБРАТЬ
            Отсутствие.Ссылка,
            Отсутствие.Сотрудник,
            Отсутствие.ДатаНачала
        ИЗ
            Отсутствие КАК Отсутствие
        ГДЕ
            ДатаНачала <= %ТекущаяДата И %ТекущаяДата < ДатаОкончания И Сотрудник.Отсутствует == Ложь И Сотрудник.Уволен == Ложь И Отсутствие.Проведен
    }
    исп РезультатНачало = ЗапросНачало.Выполнить()
    для Строка из РезультатНачало
        пер ТекущийСотрудник = Строка.Сотрудник.ЗагрузитьОбъект()
        если ТекущийСотрудник != Неопределено         
          ТекущийСотрудник.Отсутствует = Истина
          ТекущийСотрудник.Записать()  
        ;
        если ТекущийСотрудник.Должность.Представление() == "Бариста"
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
        иначе
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
        ;
    ;
    
    знч ЗапросКонец = Запрос{
        ВЫБРАТЬ
        Отсутствие.Ссылка,
        Отсутствие.Сотрудник,
        Отсутствие.ДатаОкончания
        ИЗ
        Отсутствие КАК Отсутствие
        ГДЕ
        ДатаОкончания >= %ТекущаяДата И Сотрудник.Отсутствует == Истина И Сотрудник.Уволен == Ложь И Отсутствие.Проведен
    }
    исп РезультатКонец = ЗапросКонец.Выполнить()
    для Строка из РезультатКонец
        пер ТекущийСотрудник = Строка.Сотрудник.ЗагрузитьОбъект()
        если ТекущийСотрудник != Неопределено
            ТекущийСотрудник.Отсутствует = Ложь
            ТекущийСотрудник.Записать()
        ;
        если ТекущийСотрудник.Должность.Представление() == "Бариста"
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Ложь)
        иначе
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Ложь)
        ;
    ; 
;

@ВПодсистеме
@НаСервере
метод ОбновлениеУвольнения()
    знч ТекущаяДата = Дата.Сейчас()
    знч Увольнение = Запрос{
        ВЫБРАТЬ
            Увольнение.Ссылка,
            Увольнение.ФИО,
            Увольнение.ДатаУвольнения
        ИЗ
            Увольнение КАК Увольнение
        ГДЕ
            ДатаУвольнения <= %ТекущаяДата И ФИО.Уволен == Ложь И Увольнение.Проведен
    }
    исп РезультатЗапроса = Увольнение.Выполнить()
    для Строка из РезультатЗапроса
        пер ТекущийСотрудник = Строка.ФИО.ЗагрузитьОбъект()
        ТекущийСотрудник.Уволен = Истина
        ТекущийСотрудник.Отсутствует = Ложь
        ТекущийСотрудник.Записать()
        пер КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
        для i = 0 по КофейняОбъект.Сотрудники.Граница()
            пер Сотрудник = КофейняОбъект.Сотрудники.Получить(i)
            если Сотрудник.Сотрудник == ТекущийСотрудник.Ссылка
                КофейняОбъект.Сотрудники.УдалитьПоИндексу(i)
                КофейняОбъект.Записать()
                прервать
            ;
        ;
        если ТекущийСотрудник.Должность.Представление() == "Бариста"
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
        иначе
            пер ИдПользователя =
                ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
            Пользователи.ЗапретитьВход(Пользователи.Найти(ИдПользователя), Истина)
        ;
    ;
;

@НаСервере
@ВПодсистеме
метод ОбновлениеПриема()
    знч ТекущаяДата = Дата.Сейчас()
    знч Прием = Запрос{
        ВЫБРАТЬ
            ПриемНаРаботу.Ссылка,
            ПриемНаРаботу.ФИО,
            ПриемНаРаботу.Кофейня,
            ПриемНаРаботу.Логин,
            ПриемНаРаботу.Должность,
            ПриемНаРаботу.Дата
        ИЗ
            ПриемНаРаботу КАК ПриемНаРаботу
        ГДЕ
            Дата <= %ТекущаяДата И ПриемНаРаботу.Проведен
            И НЕ СУЩЕСТВУЕТ(
                ВЫБРАТЬ 1
                ИЗ Сотрудники как Сотрудники
                ГДЕ
                Сотрудники.ДокументОПриеме == ПриемНаРаботу.Ссылка
                ИЛИ Сотрудники.Логин == ПриемНаРаботу.Логин
            )
    }
    исп РезультатЗапроса = Прием.Выполнить()
    для Строка из РезультатЗапроса           
        пер НовыйСотрудник = новый Сотрудники.Объект()
        НовыйСотрудник.Наименование = Строка.ФИО
        НовыйСотрудник.Владелец = Строка.Кофейня
        НовыйСотрудник.Логин = Строка.Логин
        НовыйСотрудник.Должность = Строка.Должность
        НовыйСотрудник.Уволен = Ложь
        НовыйСотрудник.Отсутствует = Ложь
        НовыйСотрудник.ДокументОПриеме = Строка.Ссылка
        НовыйСотрудник.Записать()
        пер ОбъектКофейни = Строка.Кофейня.ЗагрузитьОбъект()
        пер НоваяСтрока = ОбъектКофейни.Сотрудники.ДобавитьНовый()
        НоваяСтрока.Сотрудник = НовыйСотрудник.Ссылка
        ОбъектКофейни.Записать()
        если Строка.Должность.Представление() == "Бариста"
            пер ОписаниеПользователяСервиса =
                новый ОписаниеПользователяСервиса(УуидыСписков.Баристы, Строка.Логин)
            ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
            ОписаниеПользователяСервиса = ОписаниеПользователяСервиса.СЛогином(НовыйСотрудник.Логин)
            ПользователиСервиса.Изменить(ОписаниеПользователяСервиса)
            ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
            Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
            Пользователи.УстановитьУтверждение(Пользователи.Найти(
                ОписаниеПользователяСервиса.Ид), "Должность", НовыйСотрудник.Должность.ВСтроку())
            Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                НовыйСотрудник.Код)
        иначе
            пер ОписаниеПользователяСервиса =
                новый ОписаниеПользователяСервиса(УуидыСписков.Управляющие, Строка.Логин)
            ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
            ОписаниеПользователяСервиса = ОписаниеПользователяСервиса.СЛогином(НовыйСотрудник.Логин)
            ПользователиСервиса.Изменить(ОписаниеПользователяСервиса)
            ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
            Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
            Пользователи.УстановитьУтверждение(Пользователи.Найти(
                ОписаниеПользователяСервиса.Ид), "Должность", НовыйСотрудник.Должность.ВСтроку())
            Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                НовыйСотрудник.Код)

        ;
    ;
;

@ВПодсистеме
@НаСервере
метод ОбновлениеПеремещения()
    знч ТекущаяДата = Дата.Сейчас()
    знч Перемещение = Запрос{
        ВЫБРАТЬ
            КадровоеПеремещение.Ссылка,
            КадровоеПеремещение.Сотрудник,
            КадровоеПеремещение.Кофейня,
            КадровоеПеремещение.Должность,
            КадровоеПеремещение.ДатаПеревода
        ИЗ
            КадровоеПеремещение КАК КадровоеПеремещение
        ГДЕ
            ДатаПеревода <= %ТекущаяДата И КадровоеПеремещение.Проведен
            И НЕ СУЩЕСТВУЕТ(
                ВЫБРАТЬ 1
                ИЗ Сотрудники КАК Сотрудники,
                Сотрудники.ИсторияПеремещений КАК ПереводыСотрудника
                ГДЕ
                КадровоеПеремещение.Сотрудник == Сотрудники.Ссылка И
                ПереводыСотрудника.Документ == КадровоеПеремещение.Ссылка
            )
    }
    исп РезультатЗапроса = Перемещение.Выполнить()
    для Строка из РезультатЗапроса
        пер ТекущийСотрудник = Строка.Сотрудник.ЗагрузитьОбъект()
        если ТекущийСотрудник.Должность != Строка.Должность
            если Строка.Должность.Представление() == "Бариста"
                пер ИдПользователя =
                    ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Управляющие).Ид
                пер Пользователь = Пользователи.Найти(ИдПользователя)
                если Пользователь != Неопределено
                    Пользователи.Отключить(Пользователь)
                    ПользователиСервиса.Удалить(ИдПользователя)
                    попытка
                        пер ОписаниеПользователяСервиса =
                            новый ОписаниеПользователяСервиса(УуидыСписков.Баристы, ТекущийСотрудник.Логин)
                            .СЛогином(ТекущийСотрудник.Логин)
                        ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
                        ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
                        Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(
                            ОписаниеПользователяСервиса.Ид), "Должность", Строка.Должность.ВСтроку())
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                            ТекущийСотрудник.Код)
                    поймать Искл: Исключение
                        выбросить новый ИсключениеНедопустимоеСостояние("Ошибка перемещения сотрудника.")
                    ;
                ;
            иначе
                пер ИдПользователя =
                    ПользователиСервиса.НайтиПоЛогину(ТекущийСотрудник.Логин, УуидыСписков.Баристы).Ид
                пер Пользователь = Пользователи.Найти(ИдПользователя)
                если Пользователь != Неопределено
                    Пользователи.Отключить(Пользователь)
                    ПользователиСервиса.Удалить(ИдПользователя)
                    попытка
                        пер ОписаниеПользователяСервиса =
                            новый ОписаниеПользователяСервиса(УуидыСписков.Управляющие,
                            ТекущийСотрудник.Логин).СЛогином(ТекущийСотрудник.Логин)
                        ПользователиСервиса.Создать(ОписаниеПользователяСервиса)
                        ПользователиСервиса.СброситьПароль(ОписаниеПользователяСервиса.Ид, "password")
                        Пользователи.Подключить(ОписаниеПользователяСервиса.Ид)
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(
                            ОписаниеПользователяСервиса.Ид), "Должность", Строка.Должность.ВСтроку())
                        Пользователи.УстановитьУтверждение(Пользователи.Найти(ОписаниеПользователяСервиса.Ид), "Код",
                            ТекущийСотрудник.Код)
                    поймать Искл: Исключение
                        выбросить новый ИсключениеНедопустимоеСостояние("Ошибка перемещения сотрудника.")
                    ;
                ;
            ;
        ;
        пер НоваяСтрока = ТекущийСотрудник.ИсторияПеремещений.ДобавитьНовый()
        НоваяСтрока.Дата = Дата.Сейчас()
        НоваяСтрока.Из = ТекущийСотрудник.Владелец
        пер КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
        для i = 0 по КофейняОбъект.Сотрудники.Граница()
            пер СотрудникКофейни = КофейняОбъект.Сотрудники.Получить(i)
            если СотрудникКофейни.Сотрудник == ТекущийСотрудник.Ссылка
                КофейняОбъект.Сотрудники.УдалитьПоИндексу(i)
                КофейняОбъект.Записать()
                прервать
            ;
        ;
        ТекущийСотрудник.Владелец = Строка.Кофейня
        КофейняОбъект = ТекущийСотрудник.Владелец.ЗагрузитьОбъект()
        пер НоваяСтрокаКофейни = КофейняОбъект.Сотрудники.ДобавитьНовый()
        НоваяСтрокаКофейни.Сотрудник = ТекущийСотрудник.Ссылка
        КофейняОбъект.Записать()
        НоваяСтрока.В = Строка.Кофейня
        НоваяСтрока.ДолжностьРанее = ТекущийСотрудник.Должность
        ТекущийСотрудник.Должность = Строка.Должность
        НоваяСтрока.НоваяДолжность = Строка.Должность
        НоваяСтрока.Документ = Строка.Ссылка
        ТекущийСотрудник.Записать()
    ;
;