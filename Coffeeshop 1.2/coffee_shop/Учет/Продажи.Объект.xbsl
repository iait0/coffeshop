импорт Справочники

@Обработчик
метод ПередЗаписью(До: Продажи.Данные, ПараметрыЗаписи: Продажи.ПараметрыЗаписи)
    если не ЭтоНовый() и ПометкаУдаления и До.Проведен
        выбросить новый ИсключениеНедопустимоеСостояние(
                "Нельзя удалить проведенный документ. Сначала отмените проведение.")
    ;
    
    пер ВыбранныйСотрудник = Сотрудник.ЗагрузитьОбъект()
    выбор ПараметрыЗаписи.РежимЗаписи
    когда Проведен
        если ВыбранныйСотрудник.Уволен
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Выбранный сотрудник уволен.")
        ;
        если ВыбранныйСотрудник.Отсутствует
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Выбранный сотрудник отсутствует.")
        ;
        если ВыбранныйСотрудник.Владелец != Кофейня
            выбросить новый ИсключениеНедопустимоеСостояние(
            "Выбранный сотрудник не может совершать продажи в кофейне, в которой не работает.")
        ;
        если ПометкаУдаления
            выбросить новый ИсключениеНедопустимоеСостояние(
            "Помеченный на удаление документ не может быть проведен.")
        ;
        Проведен = Истина

    когда ОтменаПроведения
        Проведен = Ложь

    когда Неопределено
        если ПометкаУдаления
            Проведен = Ложь
        ;
    ;
    СуммаПоДокументу = СписокТоваров.Преобразовать(Товары -> Товары.Сумма).Сумма()
;

@Обработчик
метод ПослеЗаписи(До: Продажи.Данные, ПараметрыЗаписи: Продажи.ПараметрыЗаписи)
    если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.Проведен или (ПараметрыЗаписи.РежимЗаписи
            == РежимЗаписиДокумента.Запись и Проведен)
        ВыполнитьПроведение()

    иначе если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.ОтменаПроведения или ПометкаУдаления != До
            .ПометкаУдаления и ПометкаУдаления
        ОтменитьПроведение()
    ;
;

метод ВыполнитьПроведение()
    ОтменитьПроведение()
    
    знч НаборЗаписейПродаж = новый ПродажиТоваров.НаборЗаписей()
    НаборЗаписейПродаж.Фильтр.Установить(Регистратор = Ссылка)
    
    для СтрокаПродажи из СписокТоваров
        знч ТоварОбъект = СтрокаПродажи.Товар.ЗагрузитьОбъект()
        
        если не ТоварОбъект.Продаваемый
            выбросить новый ИсключениеВыполнения("Этот товар нельзя продать.")
        ;
        если ТоварОбъект.СобственноеПроизводство или ТоварОбъект.Продаваемый
            НаборЗаписейПродаж.ДобавитьЗапись(
                Период = Дата,
                Номенклатура = СтрокаПродажи.Товар,
                Кофейня = Кофейня,
                Сотрудник = Сотрудник,
                Количество = СтрокаПродажи.Количество,
                Сумма = СтрокаПродажи.Сумма)     
        ;
    ;
    
    знч БлокировкиПоНоменклатуре = СписокТоваров.Преобразовать(Строка -> новый ОстаткиНоменклатуры.Блокировки.Измерения(
                                        Номенклатура = Строка.Товар)).Уникальные()
    Блокировки.Заблокировать(БлокировкиПоНоменклатуре)

    исп ОбластьВидимостиВременныхТаблиц.Открыть()
    знч ЗапросНоменклатуры = Запрос{
        ВЫБРАТЬ
            СписокТоваров.Товар КАК Номенклатура,
            СУММА(СписокТоваров.Количество) КАК Количество,
            СписокТоваров.Товар.СобственноеПроизводство КАК СобственноеПроизводство
        ПОМЕСТИТЬ
            ВТ_Номенклатура
        ИЗ
            Продажи.СписокТоваров КАК СписокТоваров
        ГДЕ
            СписокТоваров.Владелец == %Ссылка
        СГРУППИРОВАТЬ ПО
            СписокТоваров.Товар,
            СписокТоваров.Товар.СобственноеПроизводство
    } 
    ЗапросНоменклатуры.Выполнить()
    
    знч ЗапросИнгредиентов = Запрос{
        ВЫБРАТЬ
            ВТ_Номенклатура.Номенклатура КАК ОсновнаяНоменклатура,
            Ингредиенты.Ингредиент КАК Номенклатура,
            Ингредиенты.Количество * ВТ_Номенклатура.Количество КАК Количество
        ПОМЕСТИТЬ
            ВТ_Ингредиенты
        ИЗ
            ВТ_Номенклатура КАК ВТ_Номенклатура
            ВНУТРЕННЕЕ СОЕДИНЕНИЕ Номенклатура КАК Номенклатура
                ПО ВТ_Номенклатура.Номенклатура == Номенклатура.Ссылка
            ВНУТРЕННЕЕ СОЕДИНЕНИЕ Номенклатура.Ингредиенты КАК Ингредиенты
                ПО Истина
        ГДЕ
            ВТ_Номенклатура.СобственноеПроизводство == Истина
    }
    ЗапросИнгредиентов.Выполнить()
    
    знч ЗапросОбъединения = Запрос{
        ВЫБРАТЬ
            ВТ_Номенклатура.Номенклатура КАК Номенклатура,
            ВТ_Номенклатура.Номенклатура.Представление КАК НоменклатураПредставление,
            ВТ_Номенклатура.Количество КАК Количество,
            Ложь КАК ЭтоИнгредиент
        ПОМЕСТИТЬ
            ВТ_ОбъединеннаяНоменклатура
        ИЗ
            ВТ_Номенклатура КАК ВТ_Номенклатура
        ГДЕ
            ВТ_Номенклатура.СобственноеПроизводство == Ложь
        ОБЪЕДИНИТЬ ВСЕ
        ВЫБРАТЬ
            ВТ_Ингредиенты.Номенклатура КАК Номенклатура,
            ВТ_Ингредиенты.Номенклатура.Представление КАК НоменклатураПредставление,
            ВТ_Ингредиенты.Количество КАК Количество,
            Истина КАК ЭтоИнгредиент
        ИЗ
            ВТ_Ингредиенты КАК ВТ_Ингредиенты
    }
    ЗапросОбъединения.Выполнить()
    
    знч Запрос = Запрос{
        ВЫБРАТЬ
            ВТ_ОбъединеннаяНоменклатура.Номенклатура КАК Номенклатура,
            ВТ_ОбъединеннаяНоменклатура.Номенклатура.Представление.ЗаменитьNull("") КАК НоменклатураПредставление,
            ВТ_ОбъединеннаяНоменклатура.Количество КАК КоличествоВДокументе,
            ОстаткиНоменклатурыОстатки.Кофейня КАК Кофейня,
            ОстаткиНоменклатурыОстатки.КоличествоОстаток.ЗаменитьNull(0) КАК КоличествоОстаток,
            ОстаткиНоменклатурыОстатки.СуммаОстаток.ЗаменитьNull(0) КАК СуммаОстаток,
            ВТ_ОбъединеннаяНоменклатура.ЭтоИнгредиент КАК ЭтоИнгредиент
        ПОРОДИТЬ
            ОстаткиНоменклатурыСводная
        ИЗ
            ВТ_ОбъединеннаяНоменклатура КАК ВТ_ОбъединеннаяНоменклатура
                ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры.Остатки КАК ОстаткиНоменклатурыОстатки
                ПО ВТ_ОбъединеннаяНоменклатура.Номенклатура == ОстаткиНоменклатурыОстатки.Номенклатура
                И Кофейня == %Кофейня
        УПОРЯДОЧИТЬ ПО
            ВТ_ОбъединеннаяНоменклатура.ЭтоИнгредиент,           
            ОстаткиНоменклатурыОстатки.Номенклатура
    }
    
    пер Номенклатура: Номенклатура.Ссылка? = Неопределено
    пер НоменклатураПредставление = ""
    пер ОсталосьСписать = 0
    пер КоличествоВДок = 0

    знч НаборЗаписей = новый ОстаткиНоменклатуры.НаборЗаписей()

    НаборЗаписей.Фильтр.Установить(Регистратор = Ссылка)

    для Строка из Запрос.Выполнить()
        если Номенклатура != Строка.Номенклатура
            если ОсталосьСписать != 0
                выбросить новый ИсключениеВыполнения(
                    "Не хватает %НоменклатураПредставление в количестве %ОсталосьСписать.")
            ;
            
            пер ТипНоменклатуры = Строка.Номенклатура.ЗагрузитьОбъект()
            если Строка.ЭтоИнгредиент
                ОсталосьСписать = Строка.КоличествоВДокументе
                КоличествоВДок = Строка.КоличествоВДокументе
            иначе если не ТипНоменклатуры.СобственноеПроизводство и не ТипНоменклатуры.УчитыватьПоКоличеству
                ОсталосьСписать = ТипНоменклатуры.РазмерПорции * Строка.КоличествоВДокументе
                КоличествоВДок = Строка.КоличествоВДокументе
            иначе 
                ОсталосьСписать = Строка.КоличествоВДокументе
            ;
            Номенклатура = Строка.Номенклатура
            НоменклатураПредставление = Строка.НоменклатураПредставление

        иначе если ОсталосьСписать == 0
            продолжить
        ;

        если Строка.КоличествоОстаток == 0
            продолжить
        ;

        знч КоличествоКСписанию = Мин(ОсталосьСписать, Строка.КоличествоОстаток)

        пер СуммаКСписанию: Число
        если КоличествоКСписанию == Строка.КоличествоОстаток
            СуммаКСписанию = Строка.СуммаОстаток
        иначе
            пер ПродаваемаяНоменклатура = Строка.Номенклатура.ЗагрузитьОбъект()
            если не ПродаваемаяНоменклатура.СобственноеПроизводство и не ПродаваемаяНоменклатура.УчитыватьПоКоличеству
                СуммаКСписанию = ПродаваемаяНоменклатура.Цена * КоличествоВДок
            иначе
                СуммаКСписанию = Строка.СуммаОстаток / Строка.КоличествоОстаток * КоличествоКСписанию
            ;
        ;

        НаборЗаписей.ДобавитьЗапись(
            Период = Дата,
            ВидЗаписи = ВидЗаписиРегистраНакопления.Расход,
            Номенклатура = Номенклатура,
            Кофейня = Строка.Кофейня как Кофейни.Ссылка,
            Количество = КоличествоКСписанию,
            Сумма = СуммаКСписанию)

        ОсталосьСписать = ОсталосьСписать - КоличествоКСписанию
    ;

    если ОсталосьСписать != 0
        выбросить новый ИсключениеВыполнения("Не хватает %НоменклатураПредставление в количестве %ОсталосьСписать.")
    ;

    НаборЗаписей.Записать()
    НаборЗаписейПродаж.Записать()
;

метод ОтменитьПроведение()
    знч НаборЗаписей = новый ОстаткиНоменклатуры.НаборЗаписей()
    знч НаборЗаписейПродаж = новый ПродажиТоваров.НаборЗаписей()
    НаборЗаписей.Фильтр.Установить(Регистратор = Ссылка)
    НаборЗаписейПродаж.Фильтр.Установить(Регистратор = Ссылка)
    НаборЗаписей.Записать()
    НаборЗаписейПродаж.Записать()
;