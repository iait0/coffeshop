импорт Справочники

@Обработчик
метод ПередЗаписью(До: Расходы.Данные, ПараметрыЗаписи: Расходы.ПараметрыЗаписи)
    если не ЭтоНовый() и ПометкаУдаления и До.Проведен
        выбросить новый ИсключениеНедопустимоеСостояние(
                "Нельзя удалить проведенный документ. Сначала отмените проведение.")
    ;
    
    выбор ПараметрыЗаписи.РежимЗаписи
    когда Проведен
        для СтрокаПродажи из Расход
            пер ВыбранныйТовар = СтрокаПродажи.Номенклатура.ЗагрузитьОбъект()
            если ВыбранныйТовар.СобственноеПроизводство
                выбросить новый ИсключениеНедопустимоеСостояние(
                    "Товар " + "'" + ВыбранныйТовар.Наименование + "'" + " не может быть записан в документ расхода.")
            ;
        ;
        если ПометкаУдаления
            выбросить новый ИсключениеНедопустимоеСостояние(
                "Помеченный на удаление документ не может быть проведен.")
        ;
        Проведен = Истина

    когда ОтменаПроведения
        Проведен = Ложь

    когда Неопределено
        если ПометкаУдаления
            Проведен = Ложь
        ;
    ;

;

@Обработчик
метод ПослеЗаписи(До: Расходы.Данные, ПараметрыЗаписи: Расходы.ПараметрыЗаписи)
    если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.Проведен или (ПараметрыЗаписи.РежимЗаписи
            == РежимЗаписиДокумента.Запись и Проведен)
        ВыполнитьПроведение()

    иначе если ПараметрыЗаписи.РежимЗаписи == РежимЗаписиДокумента.ОтменаПроведения или ПометкаУдаления != До
            .ПометкаУдаления и ПометкаУдаления
        ОтменитьПроведение()
    ;
;

метод ВыполнитьПроведение()
    ОтменитьПроведение()
    для СтрокаПродажи из Расход
        знч ТоварОбъект = СтрокаПродажи.Номенклатура.ЗагрузитьОбъект()
        если не ТоварОбъект.УчитыватьПоКоличеству
            знч Номенклатура = СтрокаПродажи.Номенклатура
            знч Запрос = Запрос{
                ВЫБРАТЬ
                    СУММА(ВЫБОР
                        КОГДА ОстаткиНоменклатуры.ВидЗаписи == ВидЗаписиРегистраНакопления.Приход
                            ТОГДА ОстаткиНоменклатуры.Количество
                        ИНАЧЕ 0
                    КОНЕЦ) КАК Приход,
                    СУММА(ВЫБОР
                        КОГДА ОстаткиНоменклатуры.ВидЗаписи == ВидЗаписиРегистраНакопления.Расход
                            ТОГДА ОстаткиНоменклатуры.Количество
                        ИНАЧЕ 0
                    КОНЕЦ) КАК Расход
                ИЗ
                    ОстаткиНоменклатуры КАК ОстаткиНоменклатуры
                ГДЕ
                    ОстаткиНоменклатуры.Номенклатура == %Номенклатура
                     И ОстаткиНоменклатуры.Кофейня == %Кофейня
            }
            знч Результат = Запрос.Выполнить()
            пер Остаток = 0
            для Строка из Результат
                если Строка.Приход != Null и Строка.Расход != Null
                    Остаток = ((Строка.Приход как Число).ЦелаяЧасть() - (Строка.Расход как Число).ЦелаяЧасть())
                ;
            ;
            если Остаток <= 0
                выбросить новый ИсключениеВыполнения(
                "Товара " + "'" + (СтрокаПродажи.Номенклатура.ЗагрузитьОбъект()).Наименование + "'" + " нет в наличии.")
            ;
        ;
    ;

    знч БлокировкиПоНоменклатуре =
        Расход.Преобразовать(Строка -> новый ОстаткиНоменклатуры.Блокировки.Измерения(
                                        Номенклатура = Строка.Номенклатура)).Уникальные()
    Блокировки.Заблокировать(БлокировкиПоНоменклатуре)

    исп ОбластьВидимостиВременныхТаблиц.Открыть()

    знч ЗапросНоменклатуры = Запрос{
        ВЫБРАТЬ
            РасходыРасход.Номенклатура КАК Номенклатура,
            СУММА(РасходыРасход.Количество) КАК Количество
        ПОМЕСТИТЬ
            ВТ_Номенклатура
        ИЗ
            Расходы.Расход КАК РасходыРасход
        ГДЕ
            РасходыРасход.Владелец == %Ссылка
        СГРУППИРОВАТЬ ПО
            РасходыРасход.Номенклатура
    }
    ЗапросНоменклатуры.Выполнить()

    знч Запрос = Запрос{
        ВЫБРАТЬ
            ВТ_Номенклатура.Номенклатура КАК Номенклатура,
            ВТ_Номенклатура.Номенклатура.Представление.ЗаменитьNull("") КАК НоменклатураПредставление,
            ВТ_Номенклатура.Количество КАК КоличествоВДокументе,
            ОстаткиНоменклатурыОстатки.Кофейня КАК Кофейня,
            ОстаткиНоменклатурыОстатки.КоличествоОстаток.ЗаменитьNull(0) КАК КоличествоОстаток,
            ОстаткиНоменклатурыОстатки.СуммаОстаток.ЗаменитьNull(0) КАК СуммаОстаток
        ПОРОДИТЬ
            ОстаткиНоменклатурыСводная
        ИЗ
            ВТ_Номенклатура КАК ВТ_Номенклатура
                ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНоменклатуры.Остатки КАК ОстаткиНоменклатурыОстатки
                ПО ВТ_Номенклатура.Номенклатура == ОстаткиНоменклатурыОстатки.Номенклатура
                И Кофейня == %Кофейня
        УПОРЯДОЧИТЬ ПО
            ОстаткиНоменклатурыОстатки.Номенклатура
    }

    пер Номенклатура: Номенклатура.Ссылка? = Неопределено
    пер НоменклатураПредставление = ""
    пер ОсталосьСписать = 0

    знч НаборЗаписей = новый ОстаткиНоменклатуры.НаборЗаписей()
    НаборЗаписей.Фильтр.Установить(Регистратор = Ссылка)

    для Строка из Запрос.Выполнить()
        если Номенклатура != Строка.Номенклатура
            если ОсталосьСписать != 0
                выбросить новый ИсключениеВыполнения(
                    "Не хватает %НоменклатураПредставление в количестве %ОсталосьСписать.")
            ;
            ОсталосьСписать = Строка.КоличествоВДокументе
            Номенклатура = Строка.Номенклатура
            НоменклатураПредставление = Строка.НоменклатураПредставление

        иначе если ОсталосьСписать == 0
            продолжить
        ;

        если Строка.КоличествоОстаток == 0
            продолжить
        ;

        знч КоличествоКСписанию = Мин(ОсталосьСписать, Строка.КоличествоОстаток)

        пер СуммаКСписанию: Число
        если КоличествоКСписанию == Строка.КоличествоОстаток
            СуммаКСписанию = Строка.СуммаОстаток
        иначе
            СуммаКСписанию = Строка.СуммаОстаток / Строка.КоличествоОстаток * КоличествоКСписанию
        ;

        НаборЗаписей.ДобавитьЗапись(
            Период = Дата,
            ВидЗаписи = ВидЗаписиРегистраНакопления.Расход,
            Номенклатура = Номенклатура,
            Кофейня = Строка.Кофейня как Кофейни.Ссылка,
            Количество = КоличествоКСписанию,
            Сумма = СуммаКСписанию)

        ОсталосьСписать = ОсталосьСписать - КоличествоКСписанию
    ;

    если ОсталосьСписать != 0
        выбросить новый ИсключениеВыполнения("Не хватает %НоменклатураПредставление в количестве %ОсталосьСписать.")
    ;

    НаборЗаписей.Записать()
;

метод ОтменитьПроведение()
    знч НаборЗаписей = новый ОстаткиНоменклатуры.НаборЗаписей()
    НаборЗаписей.Фильтр.Установить(Регистратор = Ссылка)
    НаборЗаписей.Записать()
;